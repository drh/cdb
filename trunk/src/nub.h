/* Go to: <a href="#contents">contents</a>, <a href="#index">index</a><p>   */
/*                                                                          */
/* <h2><a name="interface">Nub Interface</a></h2>                           */
/*                                                                          */
/* The interface to [[cdb]]'s `nub' is defined in                           */
/*                                                                          */
/* <nub.h>=                                                                 */
#ifndef NUB_INCLUDED
#define NUB_INCLUDED
#include "glue.h"

/* <exported nub types>=                                                    */
typedef struct {
        char file[32];
        unsigned short x, y;
} Nub_coord_T;

typedef struct {
        char name[32];
        Nub_coord_T src;
        char *fp;
        void *context;
} Nub_state_T;

typedef void (*Nub_callback_T)(Nub_state_T state);
/* <exported nub types>=                                                    */
enum { SYM, TYPE, STR };

/* These are the functions and variables that are called or referenced      */
/* by the code generated by [[stab.c]]:                                     */
/*                                                                          */
/* <exported nub data>=                                                     */
extern struct sframe *_Nub_tos;

/* <exported nub functions>=                                                */
extern void _Nub_init(Nub_callback_T startup, Nub_callback_T fault);
extern void _Nub_bp(int index, struct ssymbol *tail);
/* These functions map coordinates to location counters and vice versa,     */
/* and set and remove breakpoints.                                          */
/*                                                                          */
/*                                                                          */
/* <exported nub functions>=                                                */
extern void _Nub_src(Nub_coord_T src,
        void apply(int i, Nub_coord_T *src, void *cl), void *cl);

extern Nub_callback_T _Nub_set(Nub_coord_T src, Nub_callback_T onbreak);
extern Nub_callback_T _Nub_remove(Nub_coord_T src);

/* <exported nub functions>=                                                */
extern int _Nub_fetch(int space, void *address, void *buf, int nbytes);
extern int _Nub_store(int space, void *address, void *buf, int nbytes);

extern int _Nub_frame(int n, Nub_state_T *state);

#endif
